/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mypackage;

/**
 *
 * @author NADA
 */
public class drive extends javax.swing.JFrame {

    /**
     * Creates new form drive
     */
    public drive() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        gamecod = new javax.swing.JButton();
        drivenum = new javax.swing.JButton();
        teamco = new javax.swing.JButton();
        startper = new javax.swing.JButton();
        endperiod = new javax.swing.JButton();
        startclock = new javax.swing.JButton();
        startspot = new javax.swing.JButton();
        startreason = new javax.swing.JButton();
        plays = new javax.swing.JButton();
        endclock = new javax.swing.JButton();
        endspot = new javax.swing.JButton();
        endreason = new javax.swing.JButton();
        year = new javax.swing.JButton();
        yards = new javax.swing.JButton();
        timeofposse = new javax.swing.JButton();
        redzone = new javax.swing.JButton();
        excute = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gamecod.setText("Game Code");
        gamecod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gamecodActionPerformed(evt);
            }
        });

        drivenum.setText("Drive Number");
        drivenum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drivenumActionPerformed(evt);
            }
        });

        teamco.setText("Team code");
        teamco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamcoActionPerformed(evt);
            }
        });

        startper.setText("Start Period");
        startper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startperActionPerformed(evt);
            }
        });

        endperiod.setText("End Period");
        endperiod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endperiodActionPerformed(evt);
            }
        });

        startclock.setText("Start Clock");
        startclock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startclockActionPerformed(evt);
            }
        });

        startspot.setText("Start Spot");
        startspot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startspotActionPerformed(evt);
            }
        });

        startreason.setText("Start Reason");
        startreason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startreasonActionPerformed(evt);
            }
        });

        plays.setText("Plays");
        plays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playsActionPerformed(evt);
            }
        });

        endclock.setText("End Clock");
        endclock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endclockActionPerformed(evt);
            }
        });

        endspot.setText("End Spot");
        endspot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endspotActionPerformed(evt);
            }
        });

        endreason.setText("End Reason");
        endreason.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endreasonActionPerformed(evt);
            }
        });

        year.setText("Year");
        year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearActionPerformed(evt);
            }
        });

        yards.setText("Yards");
        yards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yardsActionPerformed(evt);
            }
        });

        timeofposse.setText("Time of Possession");
        timeofposse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeofposseActionPerformed(evt);
            }
        });

        redzone.setText("Red Zone Attempt");
        redzone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redzoneActionPerformed(evt);
            }
        });

        excute.setText("Execute");
        excute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excuteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startclock)
                            .addComponent(gamecod)
                            .addComponent(endclock))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(startspot)
                            .addComponent(endspot)
                            .addComponent(drivenum)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(yards)
                        .addGap(36, 36, 36)
                        .addComponent(timeofposse)))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(endreason)
                    .addComponent(redzone)
                    .addComponent(startreason)
                    .addComponent(teamco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(plays, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endperiod, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startper, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(year, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(excute)
                .addGap(28, 28, 28))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {drivenum, endclock, endperiod, endreason, endspot, gamecod, plays, redzone, startclock, startper, startreason, startspot, teamco, timeofposse, yards, year});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gamecod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(drivenum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startclock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startspot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(startreason, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(endperiod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endclock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(endspot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(endreason, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(plays, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yards, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeofposse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(redzone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(67, 67, 67)
                .addComponent(excute)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gamecodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gamecodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gamecodActionPerformed

    private void startclockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startclockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startclockActionPerformed

    private void endclockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endclockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endclockActionPerformed

    private void yardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yardsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yardsActionPerformed

    private void timeofposseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeofposseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeofposseActionPerformed

    private void drivenumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drivenumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_drivenumActionPerformed

    private void teamcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamcoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamcoActionPerformed

    private void startperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startperActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startperActionPerformed

    private void startspotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startspotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startspotActionPerformed

    private void startreasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startreasonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_startreasonActionPerformed

    private void endperiodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endperiodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endperiodActionPerformed

    private void endspotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endspotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endspotActionPerformed

    private void endreasonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endreasonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endreasonActionPerformed

    private void playsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playsActionPerformed

    private void redzoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redzoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_redzoneActionPerformed

    private void yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_yearActionPerformed

    private void excuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excuteActionPerformed
        // TODO add your handling code here:
        firstframe s=new firstframe();
        s.setVisible(true);
    }//GEN-LAST:event_excuteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new drive().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton drivenum;
    private javax.swing.JButton endclock;
    private javax.swing.JButton endperiod;
    private javax.swing.JButton endreason;
    private javax.swing.JButton endspot;
    private javax.swing.JButton excute;
    private javax.swing.JButton gamecod;
    private javax.swing.JButton plays;
    private javax.swing.JButton redzone;
    private javax.swing.JButton startclock;
    private javax.swing.JButton startper;
    private javax.swing.JButton startreason;
    private javax.swing.JButton startspot;
    private javax.swing.JButton teamco;
    private javax.swing.JButton timeofposse;
    private javax.swing.JButton yards;
    private javax.swing.JButton year;
    // End of variables declaration//GEN-END:variables
}
